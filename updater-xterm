#! /usr/bin/perl -w
use strict;
use Getopt::Std;
use FAI::Updater;
use FAI::Updater::Display::VT100;
use POSIX qw(strftime);
$Getopt::Std::STANDARD_HELP_VERSION=1;

# options
our ($opt_P,$opt_H,$opt_s,$opt_n,$opt_d,$opt_i,$opt_o);

our $VERSION="0.9";

my $netgroup='hand-defined';

sub HELP_MESSAGE {
  my $FH = shift;
  print $FH <<EOF
  
Usage: $0 [options] <netgroup|-H host1,host2,...>
  --help            display this help message
  --version         print version
  -P                don't use fping to check availability before trying 
                    to update
  -o                ordered mode: don't randomize order of hosts
  -i <state,...>    don't display hosts in the listed states
  -s <number>       number of updates running simultanously
  -d                debug mode: don't play around with the cursor position
  -n                dryrun mode: use a dummy-script instead of really 
                    contacting the clients
EOF
}

# - - - - - - - - - - - - - - - - - - - -
#  main routine
# - - - - - - - - - - - - - - - - - - - -

getopts('hH:Ps:ndi:o');
# emit help message when no hosts/no netgroup is given on the command line
(($#ARGV<0) and ! $opt_H) and HELP_MESSAGE(*STDERR) and exit(1);
$netgroup=$ARGV[0] if $ARGV[0];

# create logdir
my $logdir="/var/log/fai-updater/".strftime("%Y-%m-%d_%H-%M-%S",localtime);
die "can't create logdir $logdir" unless mkdir $logdir;

my $display=FAI::Updater::Display::VT100->new(TITLE=>"fai-updater, netgroup $netgroup",DEBUG=>$opt_d);
my $updater=FAI::Updater->new(DISPLAY=>$display,PING=>!$opt_P,DRYRUN=>$opt_n,ORDERED=>$opt_o,LOGDIR=>$logdir);
$updater->max_simultanous($opt_s) if $opt_s;
$updater->init_hostlist( $opt_H ? split(/,/,$opt_H) : split(/\s/,`libexec/get_hostlist $netgroup`));
$opt_i and $display->hide_states(split(/,/,$opt_i));
do {
  sleep 1;
} until ($updater->run()==0);
